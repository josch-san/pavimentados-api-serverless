AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Pavimentados serverless version

Parameters:
  UserPoolId:
    Type: String
    Description: Cognito user pool id
  InfraTableName:
    Type: String
    Description: DynamoDB table name
  AttachmentsBucketName:
    Type: String
    Description: Attachments bucket name
  DatalakeBucketName:
    Type: String
    Description: Datalake bucket name
  ArtifactsBucketName:
    Type: String
    Description: Artifacts bucket name
  Mode:
    Type: String
    Description: Environment context
    Default: dev
    AllowedValues:
      - dev
      - test
      - prod

Mappings:
  ModeMap:
    dev:
      ModeSuffix: -dev
      ApiStage: dev
    test:
      ModeSuffix: -test
      ApiStage: test
    prod:
      ModeSuffix: ''
      ApiStage: v1

Globals:
  Function:
    Timeout: 30
    Runtime: python3.9
    Tracing: Active
    Environment:
      Variables:
        LOG_LEVEL: INFO
        POWERTOOLS_LOGGER_SAMPLE_RATE: 0.1
        POWERTOOLS_LOGGER_LOG_EVENT: true
    Tags:
      Product: Pavimentados
      Environment: !Ref Mode


Resources:
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /service-role/
      RoleName: !Sub
        - 'PavimentadosLambdaRole${suffix}'
        - suffix: !FindInMap [ModeMap, !Ref Mode, ModeSuffix]
      Description: Pavimentados Lambda service role.
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess
      Policies:
        - PolicyName: pavimentados-lambda-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - 
                Effect: Allow
                Action:
                  - dynamodb:Scan
                  - dynamodb:Query
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                Resource:
                  - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${InfraTableName}'
                  - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${InfraTableName}/*'
              - 
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource: !Sub 'arn:aws:s3:::${AttachmentsBucketName}/*'
              - 
                Effect: Allow
                Action: sqs:SendMessage
                Resource: !GetAtt InferenceQueue.Arn

  ApiGatewayRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /service-role/
      RoleName: !Sub
        - 'PavimentadosApiGatewayRole${suffix}'
        - suffix: !FindInMap [ModeMap, !Ref Mode, ModeSuffix]
      Description: Pavimentados Api Gateway service role.
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: pavimentados-apigateway-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - 
                Effect: Allow
                Action: lambda:InvokeFunction
                Resource: !GetAtt TaskMicroserviceFunction.Arn

  StatesRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /service-role/
      RoleName: !Sub
        - 'PavimentadosStatesRole${suffix}'
        - suffix: !FindInMap [ModeMap, !Ref Mode, ModeSuffix]
      Description: Pavimentados States service role.
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: states.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: pavimentados-states-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - 
                Effect: Allow
                Action:
                  - xray:PutTraceSegments
                  - xray:PutTelemetryRecords
                  - xray:GetSamplingRules
                  - xray:GetSamplingTargets
                # TODO: Pending to review wildcards resource
                Resource: '*'
              - 
                Effect: Allow
                Action:
                  - events:PutTargets
                  - events:PutRule
                  - events:DescribeRule
                Resource: !Sub 'arn:aws:events:${AWS::Region}:${AWS::AccountId}:rule/StepFunctionsGetEventsForSageMakerProcessingJobsRule'
              - 
                Effect: Allow
                Action: lambda:InvokeFunction
                Resource:
                  - !GetAtt BuildPayloadFunction.Arn
                  - !GetAtt DiscoverOutputsFunction.Arn
              - 
                Effect: Allow
                Action:
                  - sagemaker:CreateProcessingJob
                  - sagemaker:DescribeProcessingJob
                  - sagemaker:StopProcessingJob
                  - sagemaker:AddTags
                Resource: '*'
              - 
                Effect: Allow
                Action: iam:PassRole
                Resource: !GetAtt SageMakerRole.Arn

  SageMakerRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /service-role/
      RoleName: !Sub
        - 'PavimentadosSageMakerRole${suffix}'
        - suffix: !FindInMap [ModeMap, !Ref Mode, ModeSuffix]
      Description: Pavimentados SageMaker service role.
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: sagemaker.amazonaws.com
            Action: sts:AssumeRole
      # ManagedPolicyArns:
      #   - !Ref DatalakeReadPolicy
      #   - !Ref DatalakeWritePolicy
      Policies:
        - PolicyName: pavimentados-sagemaker-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - 
                Effect: Allow
                Action:
                  - cloudwatch:PutMetricData
                  - logs:CreateLogStream
                  - logs:CreateLogGroup
                  - logs:DescribeLogStreams
                  - logs:PutLogEvents
                  - ecr:GetAuthorizationToken
                Resource: '*'
              - 
                Effect: Allow
                Action: s3:ListBucket
                Resource:
                  - !Sub 'arn:aws:s3:::${AttachmentsBucketName}'
                  - !Sub 'arn:aws:s3:::${ArtifactsBucketName}'
              - 
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource: !Sub 'arn:aws:s3:::${AttachmentsBucketName}/pavimenta2/*'
              - 
                Effect: Allow
                Action: s3:GetObject
                Resource: !Sub 'arn:aws:s3:::${ArtifactsBucketName}/pavimenta2/sagemaker/*'

  PavimentadosApi:
    Type: AWS::Serverless::Api
    Properties:
      Description: Main API access to work with infradinamica
      StageName: !FindInMap [ModeMap, !Ref Mode, ApiStage]
      EndpointConfiguration:
        Type: REGIONAL
      DefinitionBody: !Transform
        Name: AWS::Include
        Parameters:
          Location: src/apigateway/api-definition.yaml
      MethodSettings:
        - HttpMethod: '*'
          ResourcePath: '/*'
          ThrottlingBurstLimit: 50
          ThrottlingRateLimit: 100
      TracingEnabled: true
      Tags:
        Product: Pavimentados
        Environment: !Ref Mode

  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: !Sub
        - 'pavimentados-web-client${suffix}'
        - suffix: !FindInMap [ModeMap, !Ref Mode, ModeSuffix]
      UserPoolId: !Ref UserPoolId
      GenerateSecret: false
      EnableTokenRevocation: true
      PreventUserExistenceErrors: ENABLED
      ExplicitAuthFlows:
        - ALLOW_REFRESH_TOKEN_AUTH
        - ALLOW_USER_SRP_AUTH
      RefreshTokenValidity: 30
      SupportedIdentityProviders: [ COGNITO ]
      CallbackURLs: [ https://localhost ]
      LogoutURLs: [ https://localhost ]
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthFlows:
        - code
        - implicit
      AllowedOAuthScopes:
        - openid
        - profile

  InferenceQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub
        - 'pavimentados-inference-queue${suffix}'
        - suffix: !FindInMap [ModeMap, !Ref Mode, ModeSuffix]

  TaskMicroserviceFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub
        - 'pavimentados-task-microservice${suffix}'
        - suffix: !FindInMap [ModeMap, !Ref Mode, ModeSuffix]
      Role: !GetAtt LambdaRole.Arn
      Description: Task microservice API handler function
      CodeUri: src/lambda/task-microservice
      Handler: app.lambda_handler
      Layers:
        - !Sub 'arn:aws:lambda:${AWS::Region}:017000801446:layer:AWSLambdaPowertoolsPythonV2:32'
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: task-microservice
          TABLE_NAME: !Ref InfraTableName
          API_STAGE: !FindInMap [ModeMap, !Ref Mode, ApiStage]
          ATTACHMENTS_BUCKET_NAME: !Ref AttachmentsBucketName
          TASK_QUEUE_URL: !GetAtt InferenceQueue.QueueUrl

  BuildPayloadFunction:
    Type: AWS::Serverless::Function
    Properties:
      Role: !GetAtt LambdaRole.Arn
      FunctionName: !Sub
        - 'pavimentados-build-payload${suffix}'
        - suffix: !FindInMap [ModeMap, !Ref Mode, ModeSuffix]
      Description: Prepare input data to parameters on workflow.
      CodeUri: src/lambda/build-payload
      Handler: lambda_function.lambda_handler
      Environment:
        Variables:
          BASE_CODE_S3URI: !Sub 's3://${ArtifactsBucketName}/pavimenta2/sagemaker/road-section-inference'

  DiscoverOutputsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Role: !GetAtt LambdaRole.Arn
      FunctionName: !Sub
        - 'pavimentados-discover-outputs${suffix}'
        - suffix: !FindInMap [ModeMap, !Ref Mode, ModeSuffix]
      Description: Discover output files writed by inference process.
      CodeUri: src/lambda/discover-outputs
      Handler: lambda_function.lambda_handler

  RoadSectionInferenceWorkflow:
    Type: AWS::Serverless::StateMachine
    Properties:
      Role: !GetAtt StatesRole.Arn
      Name: !Sub
        - 'pavimentados-road-section-inference-workflow${suffix}'
        - suffix: !FindInMap [ModeMap, !Ref Mode, ModeSuffix]
      Definition:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: src/stepfunctions/RoadSectionInferenceWorkflow.yaml
      DefinitionSubstitutions:
        Mode: !Ref Mode
        # UpdateTaskFunctionArn: !GetAtt UpdateTaskFunction.Arn
        BuildPayloadFunctionArn: !GetAtt BuildPayloadFunction.Arn
        DiscoverOutputsFunctionArn: !GetAtt DiscoverOutputsFunction.Arn
        InferenceRoleArn: !GetAtt SageMakerRole.Arn
        # DatabaseName: !Ref PavimentadosDatabase
        Region: !Ref AWS::Region

Outputs:
  WebClientId:
    Description: Cognito user pool web client id
    Value: !Ref CognitoUserPoolClient
  ApiUrl:
    Description: Api base url
    Value: !Sub
      - 'https://${PavimentadosApi}.execute-api.${AWS::Region}.amazonaws.com/${apiStage}'
      - apiStage: !FindInMap [ModeMap, !Ref Mode, ApiStage]
